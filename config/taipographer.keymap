#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "taipographer.h"

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20
#include <dt-bindings/zmk/pointing.h>

// CONFIG
#define DEFAULT_LAYER LINUX
#define COMBO_TIMEOUT TIMEOUT_SHORT
#define STICKY_TIMEOUT TIMEOUT_XLONG
#define TAPPING_TERM_MS TIMEOUT_LONG

/ {
  behaviors {
    // tog_on: toggle_on_layer {
    //   compatible = "zmk,behavior-toggle-layer";
    //   #binding-cells = <1>;
    //   display-name = "Toggle Layer On";
    //   toggle-mode = "on";
    // };
    // tog_off: toggle_off_layer {
    //   compatible = "zmk,behavior-toggle-layer";
    //   #binding-cells = <1>;
    //   display-name = "Toggle Layer Off";
    //   toggle-mode = "off";
    // };

    sm: sticky_mod {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <TAPPING_TERM_MS>;
      bindings = <&kp>, <&sk>;
      display-name = "Sticky-Mod";
    };
  };

  combos {
    compatible = "zmk,combos";
    #include "combos.dtsi"
  };

  keymap {
    compatible = "zmk,keymap";

    /* We define layers here, but they are all unassigned.
     * Instead, I choose to use combos for assigning keys.
     */
    linux {
      display-name = "linux";
      bindings = <
        &none      &none      &none      &none      &none      &none     
        &none      &none      &none      &none      &none      &none     
        /*                            */ &none      &none      &none     

        &none      &none      &none      &none      &none      &none     
        &none      &none      &none      &none      &none      &none     
        &none      &none      &none     
      >;
    };

    navigation {
      display-name = "nav";
      bindings = <
        &none      &kp HOME   &kp PGUP   &kp PGDN   &kp END    &none     
        &none      &kp LEFT   &kp UP     &kp DOWN   &kp RIGHT  &none     
        /*                            */ &none      &none      &none     

        &none      &kp HOME   &kp PGDN   &kp PGUP   &kp END    &none     
        &none      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none     
        &none      &none      &none     
      >;
    };

    function {
      display-name = "fn";
      bindings = <
        &none      &kp HOME   &kp PGUP   &kp PGDN   &kp END    &none     
        &none      &kp LEFT   &kp UP     &kp DOWN   &kp RIGHT  &none     
        /*                            */ &none      &none      &none     

        &none      &kp HOME   &kp PGDN   &kp PGUP   &kp END    &none     
        &none      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none     
        &none      &none      &none     
      >;
    };

    qwerty_steno {
      display-name = "steno";
      bindings = <
        &kp 1 &kp Q &kp W &kp E &kp R &kp T
        &kp 2 &kp A &kp S &kp D &kp F &kp G
        /*             */ &kp 3 &kp C &kp V

        &kp Y &kp U &kp I &kp O &kp P &kp LBKT
        &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
        &kp N &kp M &kp 3
      >;
    };

    gaming {
      display-name = "gaming";
      bindings = <
        &kp F1     &kp LALT   &kp C      &kp W      &kp R      &kp Y     
        &kp ESC    &kp LCTL   &kp A      &kp S      &kp D      &kp G     
        /*                            */ &kp LSHFT  &kp E      &kp SPACE 

        &none      &none      &none      &none      &none      &none     
        &none      &none      &none      &none      &none      &none     
        &none      &none      &none     
      >;
    };

  };
};

&sk {
  release-after-ms = <STICKY_TIMEOUT>;
  lazy;
};
